package wordsearch;

import java.util.PriorityQueue;

public class WordFind {
	private char[][] matrix;
	private int n;
	private PriorityQueue<Vector> vArr;
	private int height;
	
	public WordFind(int n) {
		this.n = n;
		this.matrix = new char[this.n][this.n];
		this.height = 0;
		this.vArr = new PriorityQueue<>();
		
		this.vArr.add(new Vector(0,1));
		this.vArr.add(new Vector(1,1));
		this.vArr.add(new Vector(1,0));
		this.vArr.add(new Vector(1,-1));
		this.vArr.add(new Vector(0,-1));
		this.vArr.add(new Vector(-1,-1));
		this.vArr.add(new Vector(-1,0));
		this.vArr.add(new Vector(-1,1));
	}
	
	public void createMatrix(String row) {
		for(int i=0; i<row.length(); i++) {
			this.matrix[height][i] = row.charAt(i);
		}
		this.height++;
	}
	
	
	public String search(String word) {
		for(int i=0; i<this.n; i++){
			for(int j=0; j<this.n; j++){
				if(word.charAt(0)==this.matrix[i][j]){
					
				}
			}
		
		
		
		
		
		String info = "";
		return info;
	}
}
