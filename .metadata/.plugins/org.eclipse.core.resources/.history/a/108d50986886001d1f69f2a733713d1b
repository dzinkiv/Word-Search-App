package wordsearch;

import java.awt.*;
import java.awt.event.*;
import java.util.Arrays;
import java.lang.Math;

import javax.swing.*;
 
public class BuildView extends JFrame implements ActionListener, ItemListener{
   private JTextField[] gridCells;
   private JTextField wordInput;
   private Label text1, text2;
   private JButton buildButton, searchButton;
   private JComboBox gridSize;
   private int size;
   private Panel panelDisplay, grid, searchDisplay;
   private WordFind w;
   private char[][] data;
   private String[] sizeList;
   
   JMenuBar menuBar;
   JMenu menu, submenu;
   JMenuItem menuDemo1, menuDemo2, menuDemo3, menuDemo4, menuDemo5;
   JRadioButtonMenuItem rbMenuItem;
   JCheckBoxMenuItem cbMenuItem;
   
   
   public BuildView () {
	   //Create the menu bar.
	   menuBar = new JMenuBar();

	   //Build the first menu.
	   menu = new JMenu("Demo Matrices");
	   menu.setMnemonic(KeyEvent.VK_A);
	   menu.getAccessibleContext().setAccessibleDescription("The only menu in this program that has menu items");
	   menuBar.add(menu);
	   
	   menuDemo1 = new JMenuItem("Canada 20x20", KeyEvent.VK_T);
	   menuDemo1.addActionListener(this);
	   menu.add(menuDemo1);
	   
	   menuDemo2 = new JMenuItem("nothing", KeyEvent.VK_T);
	   menu.add(menuDemo2);

	   setJMenuBar(menuBar);

	   
	   
	   
	   buildButton = new JButton();
	   buildButton.setBounds(100,100,100,25);
	   buildButton.addActionListener(this);
	   buildButton.setText("Build");
	   
	   searchButton = new JButton();
	   searchButton.setBounds(100,100,100,25);
	   searchButton.addActionListener(this);
	   searchButton.setText("Find");

	   text1 = new Label("Select Size: ");	   
	   sizeList = new String[]{"choose...", "3x3", "4x4", "5x5", "6x6", "7x7", "8x8", "9x9", "10x10", "11x11", "12x12", "13x13", "14x14", "15x15", "16x16", "17x17", "18x18", "19x19", "20x20"};
       gridSize = new JComboBox<>(sizeList);
       gridSize.addItemListener(this);
	   
	   wordInput = new JTextField(5);
	   text2 = new Label("Look for: ");

	   panelDisplay = new Panel(new FlowLayout());
	   panelDisplay.add(text1);
	   panelDisplay.add(gridSize);
	   
	   searchDisplay = new Panel(new FlowLayout());
	   searchDisplay.add(text2);
	   searchDisplay.add(wordInput);
	   searchDisplay.add(searchButton);
	   
	   setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	   setLayout(new BorderLayout());
	   add(panelDisplay, BorderLayout.NORTH);
	   setTitle("Word Search Solver (WSS)");
	   setSize(200, 200);
	   setVisible(true);
   }

   
   protected void updateGrid(int gridSize, String input) {
	   if(grid!=null) {
		   grid.removeAll();
		   getContentPane().remove(grid);
	   }
	   grid = new Panel(new GridLayout(gridSize, gridSize));
	   gridCells = new JTextField[gridSize*gridSize];

	   for(int i=0; i<(gridSize*gridSize); i++) {
		   String letter = "";
		   if(input!=null) letter = "" + input.toLowerCase().charAt(i);
		   gridCells[i] = new JTextField(letter);
		   gridCells[i].setDocument(new JTextFieldLimit(1));
		   gridCells[i].setHorizontalAlignment(JTextField.CENTER);
		   gridCells[i].setFont(new Font("Serif", Font.PLAIN, 20));
		   grid.add(gridCells[i]);
	   }
	   add(grid, BorderLayout.CENTER);
	   panelDisplay.add(buildButton);
	   setSize((size*50)+150, (size*50)+200);
	   //pack();
   }
   
   public char[][] exctractInput(){
	   data = new char[size][size];
	   for(int k=0, i=0, j=0; k<size*size && i<size; k++, j++) {
		   data[i][j] = gridCells[k].getText().toLowerCase().charAt(0);
		   if(j==size-1) {
			   j=-1;
			   i++;
		   }
	   }
	   return data;
   }
   
   public void setBuiltView() {
	   if(searchDisplay!=null) {
		   getContentPane().remove(searchDisplay);
	   }
	   //setVisible(true);
	   add(searchDisplay, BorderLayout.SOUTH);
	   setSize((size*50)+150, (size*50)+240);
	   //pack();
   }
   
   @Override
   public void actionPerformed(ActionEvent e) {
	   if(e.getSource()==buildButton) {
		   try{
			   data = exctractInput();
			   w = new WordFind(data, size);
			   setBuiltView();
		   }
		   catch (NumberFormatException ex){
		   }
	   }
	   if (e.getSource()==searchButton) {
		   for(int i=0; i<size*size; i++) 
			   gridCells[i].setBackground(new Color(0xffffff));
		   int[] locations = w.search(wordInput.getText().toLowerCase());
		   if(locations!=null)
			   for(int i=0; i<wordInput.getText().length(); i++)
				   gridCells[locations[i]].setBackground(new Color(0x7FD0F0));
	   }
	   if(e.getSource() == menuDemo1) {
		   size = (int) Math.sqrt(demoMatrix1.length());
		   setBuiltView();
		   updateGrid(size, demoMatrix1);
		   data = exctractInput();
		   w = new WordFind(data, size);
	   }
   }
   
   public void itemStateChanged(ItemEvent e) {
	   Object source = e.getItem();
	   JComboBox cb = (JComboBox) e.getSource();
	   
//	   if(e.getItem() == menuDemo1) {
//		   setBuiltView();
//		   updateGrid((int) Math.sqrt(demoMatrix1.length()), demoMatrix1);
//		   data = exctractInput();
//		   w = new WordFind(data, size);
//	   }
	   
	   if(searchDisplay!=null) {
		   getContentPane().remove(searchDisplay);
	   }
	   
	   if (!cb.getSelectedItem().toString().equals("choose...")) {
		   size = cb.getSelectedIndex() + 2;
		   updateGrid(size, null);
	   }
   }
   
   private String demoMatrix1 =   "TPLOONIEAIROTCIVWDSH"
				   		+ "ECRTUVANUNHSBCAHNNRP"
				   		+ "UOBIRACNEIEOHEITOAEA"
				   		+ "LELBNCISAITACTATVLVT"
				   		+ "YSAROCOMRWRIEKCRADAF"
				   		+ "OEBITOEIALEHUIESSNEH"
				   		+ "TERTMOAEOPOHRLTYCUBX"
				   		+ "TGAISRITDRLECSAEOOPA"
				   		+ "ACDSPNTRSWDEETRQTFNF"
				   		+ "WUOHOEIEAEARSSAVIWOI"
				   		+ "ARRCTINARTORMYTKAEKL"
				   		+ "TLCOEGOFTFNFDARJSNUA"
				   		+ "OIWLAEDMONTONINUOAYH"
				   		+ "QNQUTPCEBEUQUESIPHSB"
				   		+ "UGEMRICITORONTOLTSNQ"
				   		+ "EUEBENREGINAMBECAOCS"
				   		+ "LIOIBNCIFAELELPAMNBT"
				   		+ "SEKALIMYELLOWKNIFEDA"
				   		+ "WONSAWPKCIWSNURBWENY"
				   		+ "NORTHWESTTERRITORIES";

}